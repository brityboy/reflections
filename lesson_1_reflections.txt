How did viewing a diff between two versions of a file help you see the bug that
was introduced?

I used an online compare differences program and it pointed out EXACTLY where the difference was

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You can identify where the development of a code went right or wrong to improve debugging future versions and releases

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

The pro of manually choosing to commit is that you can separate logically different changes. The con is that the programmer has to remember when to do this.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because git is focused being a best fit for version control systems for code which inherently has repositories rather than google docs which is for office documents

How can you use the commands git log and git diff to view the history of files?

git log is used to view all of the different commits and commit ID's; git diff helps to see the specific differences between commits

How might using version control make you more confident to make changes that could break something?

using version control allows us to have a systematic way of finding where changes broke something, hence more risks can actually be taken in coding

Now that you have your workspace set up, what do you want to try using Git for?

I want to use git for version control between different machine learning scripts!